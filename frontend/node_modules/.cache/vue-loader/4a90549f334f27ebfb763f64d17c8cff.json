{"remainingRequest":"D:\\Files\\GitHub\\EventManagement-PortraitsByBukool\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Files\\GitHub\\EventManagement-PortraitsByBukool\\frontend\\src\\components\\Admin\\AdminServices.vue?vue&type=template&id=c219dd26&scoped=true&","dependencies":[{"path":"D:\\Files\\GitHub\\EventManagement-PortraitsByBukool\\frontend\\src\\components\\Admin\\AdminServices.vue","mtime":1608914003830},{"path":"D:\\Files\\GitHub\\EventManagement-PortraitsByBukool\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1607795565778},{"path":"D:\\Files\\GitHub\\EventManagement-PortraitsByBukool\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Files\\GitHub\\EventManagement-PortraitsByBukool\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1607795565778},{"path":"D:\\Files\\GitHub\\EventManagement-PortraitsByBukool\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}